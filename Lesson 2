# 1. Создать список и заполнить его элементами различных типов данных.
# Реализовать скрипт проверки типа данных каждого элемента.
# Использовать функцию type() для проверки типа.
# Элементы списка можно не запрашивать у пользователя, а указать явно, в программе.

list = ["name", "age", "city", 2, 45.3, None, 110]
print(list)
# Получение типа списка
print(type(list))
# Получение типа элементов списка вариант 1
for item in list:
    print(type(item))

# Получение типа элементов списка вариант 2
index=0
while index<len(list):
    print(type(list[index]))
    index += 1


# 2. Для списка реализовать обмен значений соседних элементов.
# Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т. д.
# При нечётном количестве элементов последний сохранить на своём месте.
# Для заполнения списка элементов нужно использовать функцию input().
my_list = input('Введите значения: ').split()
new_list = []
for i in range(0, len(my_list), 2):
    next_i = i + 2
    a = my_list[i:next_i]
    a.reverse()
    new_list.extend(a)
print(new_list)


# 3. Пользователь вводит месяц в виде целого числа от 1 до 12.
# Сообщить, к какому времени года относится месяц (зима, весна, лето, осень).
# Напишите решения через list и dict.

season = {
    'Winter': [12, 1, 2],
    'Spring': [3, 4, 5],
    'Summer': [6, 7, 8],
    'Autumn': [9, 10, 11]
}
month = int(input('Введите номер месяца'))
for key, value in season.items():
    if month in value:
        print(key)
        break
else:
    print('Not a month')
# Пользователь вводит строку из нескольких слов, разделённых пробелами.
# Вывести каждое слово с новой строки. Строки нужно пронумеровать.
# Если слово длинное, выводить только первые 10 букв в слове.


my_list = input('Введите значения: ').split()

for i, el in enumerate(my_list, 1):
    print(i, el[0:10])

# Реализовать структуру «Рейтинг», представляющую собой набор натуральных чисел, который не возрастает.
# У пользователя нужно запрашивать новый элемент рейтинга.
# Если в рейтинге существуют элементы с одинаковыми значениями, то новый элемент с тем же значением должен
# разместиться после них.
# Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
# Пользователь ввёл число 3. Результат: 7, 5, 3, 3, 3, 2.
# Пользователь ввёл число 8. Результат: 8, 7, 5, 3, 3, 2.
# Пользователь ввёл число 1. Результат: 7, 5, 3, 3, 2, 1.
# Набор натуральных чисел можно задать сразу в коде, например, my_list = [7, 5, 3, 3, 2].

rating = [10, 10, 5, 4, 1]
print(f"Текущий рейтинг: {rating}")

new_scores_count = int(input("Сколько вы хотите ввести новых элементов рейтинга: "))

for i in range(1, new_scores_count + 1):
    new_score = int(input("Введите новый элемент рейтинга: "))
    if new_score > 0:
        rating.append(new_score)
        rating.sort(reverse = True)
        print(f"Новый рейтинг: {rating}")
    else:
        print("Ошибка. Вы ввели не натуральное число")


